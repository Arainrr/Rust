using Rust.Ai.HTN.Reasoning;

namespace Rust.Ai.HTN.Scientist.Reasoners
{
	public class VulnerabilityReasoner : INpcReasoner
	{
		private float _lastVulnerabilityDecrementTime;

		public float TickFrequency
		{
			get;
			set;
		}

		public float LastTickTime
		{
			get;
			set;
		}

		public void Tick(IHTNAgent npc, float deltaTime, float time)
		{
			ScientistContext scientistContext = npc.AiDomain.NpcContext as ScientistContext;
			if (scientistContext != null)
			{
				HTNPlayer hTNPlayer = npc as HTNPlayer;
				if (!(hTNPlayer == null) && time - hTNPlayer.lastAttackedTime > 3f && scientistContext.IsFact(Facts.Vulnerability) && time - _lastVulnerabilityDecrementTime > 2f)
				{
					_lastVulnerabilityDecrementTime = time;
					scientistContext.IncrementFact(Facts.Vulnerability, -1);
				}
			}
		}
	}
}
